package HtmlReportGenerator;

use warnings;
use strict;

use Dirs;
use lib Dirs::external_root();

use File::Spec::Functions qw (catfile catdir);
use File::Copy::Recursive qw(dircopy);

use Report::TestSessionReportBuilder;
use Logger;

sub generate
{
    my (%args) = @_;
    my $artifactsRoot = $args{artifactsRoot};
    my $jsonText = getTestReportDataAsJson(%args);
    if (not -e catfile($artifactsRoot, "TestReportData.json"))
    {
        FileUtils::writeAllLines(catfile($artifactsRoot, "TestReportData.json"), $jsonText);
    }
    if (-e catfile($artifactsRoot, "TestReport.html"))
    {
        # transition solution: already generated by utr#
        return;
    }
    my $destinationFile = catfile($artifactsRoot, "TestReport.html");
    Report::TestSessionReportBuilder::generateHtml($jsonText, $destinationFile);
    my $utrRoot = Dirs::UTR_root();
    my $scriptsSrc = catdir($utrRoot, 'TestReportTemplate', 'TestReport.files');
    my $scriptsDest = catdir($artifactsRoot, 'TestReport.files');
    dircopy(catdir($scriptsSrc, 'js'), catdir($scriptsDest, 'js'));
    dircopy(catdir($scriptsSrc, 'css'), catdir($scriptsDest, 'css'));
    dircopy(catdir($scriptsSrc, 'templates'), catdir($scriptsDest, 'templates'));
    my $testReportV1 = catfile($artifactsRoot, "TestReportV1.html");

    if (-e $testReportV1)
    {
        Logger::minimal("See $testReportV1 for details");
    }
    else
    {
        Logger::minimal("$destinationFile");
    }
}

sub getTestReportDataAsJson
{
    my (%args) = @_;
    my $artifactsRoot = $args{artifactsRoot};
    if (-e "$artifactsRoot/TestReportData.json")
    {
        my $json = join(q (), FileUtils::readAllLines("$artifactsRoot/TestReportData.json"));
        return $json;
    }

    my %reportData = Report::TestSessionReportBuilder::buildData(
        suiteResults => $args{suiteResults},
        collectors => $args{collectors},
        artifactsRoot => $artifactsRoot,
        commandLine => $args{commandLine}
    );
    my $json = JSON->new(utf8 => 1, convblessed => 1);
    return $json->to_json(\%reportData);
}

1;
